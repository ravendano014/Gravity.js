function Particle(t,s,h,i,o,a,n,d,c){
    this.mass = t;
    this.x = s;
    this.y = h;
    this.vx = i;
    this.vy = o;
    this.ax = 0;
    this.ay = 0;
    this.type = a || "matter";
    this.name = n || "";
    this.color =  c !== undefined ? c : [];
    this.age = 0;
    this.lifetime = Infinity;
    this.density = d !== undefined ? d : 1,
    
    // Black hole properties
    this.isBlackHole = (this.type === "blackhole");
    if (this.type === "dark") {
        if(c !== undefined){
            this.color = c;
        }
        this.radius=(Math.log(Math.E+t/1e3))/this.density; // Radio basado en la masa
        this.name = "Dark Matter";
    }
    // Normal matter/antimatter
    else {
        this.type === "matter" 
            ? (this.color = [255, Math.round(256/(1+Math.pow(t/1e5,1))), Math.round(256/(1+Math.pow(t/1e4,1)))])
            : (this.color = [Math.round(256/(1+Math.pow(t/1e4,1))), Math.round(256/(1+Math.pow(t/1e5,1))), 255]);
        //this.radius = Math.log(Math.E + t/1e3);
        if(c !== undefined){
            this.color = c;
        }
        this.radius=(Math.log(Math.E+t/1e3))/this.density; // Radio basado en la masa
        if (this.type === "neutron") {
            this.magnetosphereRadius = this.radius * 15;
            this.gravityInfluenceRadius = this.radius * 80; // Radio de influencia grande
            this.eventHorizonRadius = 0; // No tiene horizonte de eventos
            this.accretionDiskRadius = this.radius * 10; // Disco de acreción más pequeño
            this.pulsePhase = 0;
        }
        if (this.type === "blackhole") {
            this.eventHorizonRadius = 10;
            this.accretionDiskRadius = this.eventHorizonRadius * 3;
            this.gravityInfluenceRadius = this.eventHorizonRadius * 10; // Radio de influencia grande
            this.name = "Black Hole (" + Math.round(t/1e4) + "M☉)";
        } 
    }

    //console.log(this.density);
    
    this.color[3] = (this.color[0] << 16 | this.color[1] << 8 | this.color[2]).toString(16);
    this.path = [];
    this.pathLength = 10000;
    
    // For collision effects
    this.collisionEnergy = 0;
    this.collisionTimer = 0;
}
